<%

# assumming if user has edit on one protocol, can have button , exclude the -1 scan_procedures 
# apply limit protocol  on create , edit in create form  
 edit_low_scan_procedure_array = []
edit_low_scan_procedure_array =  (current_user.edit_low_scan_procedure_array).split(' ').map(&:to_i)
edit_count =edit_low_scan_procedure_array.length 
edit_count = edit_count -1 
%>
<%   @current_tab = "questionnaires"
%>

<% if edit_count > 0 %>
<span style="float:right"><%= link_to 'Edit Questionnaire appt', edit_questionnaire_path(@questionnaire) %> | <%= link_to 'Vgroup', Vgroup.find(@appointment.vgroup_id) %></span>
<% end %>
<div id="visit_heading">
  <%=	link_to "&larr; Older".html_safe, @older_questionnaire if @older_questionnaire %>
  &nbsp;
  <h1><%= @enumbers.blank? ? @vgroup.rmr : @enumbers.collect{|e| e.enumber }.join(", ") %></h1>
  <p class="date"><%= @appointment.appointment_date.to_s(:long) %></p>
  &nbsp;
  <%=	link_to "Newer &rarr;".html_safe, @newer_questionnaire if @newer_questionnaire %>
  <br />
</div>


<div id="leftcol" class="two_col_left">
  <h3>Summary:</h3>
  
  <div id="visit_details_note" class="sticky">
    <%= key_val_table("visit_details", {
      :Questionnaire_appt_date => @appointment.appointment_date,
      :enumber => @enumber.nil? ? nil : link_to(@vgroup.enrollment.enumber, @vgroup.enrollment),
      :RMR_Number => @vgroup.rmr,
     :Participant => @participant.nil? ? nil : link_to('view participant', @participant)
    }) %>
  </div>

  <div id="visit_details_note" class="sticky">
    <%= key_val_table("visit_details", {
      :Questionnaire_completed => @vgroup.completedquestionnaire ,
    }) %>
  </div>

</div>


<div id="visit_status_report" class="two_col_right">

  <h3>Notes:</h3>
  <div id="notes" class="sticky">
	<%=  RedCloth.new(@appointment.comment.blank? ? "No comment entered for this Questiuonnaire" : @appointment.comment).to_html.html_safe 
            %><br>

  </div> 


</div>


<br style="clear: both" /><br />
<%= render :partial => 'questionforms/displayform', :locals => { } %>